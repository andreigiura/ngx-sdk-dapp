var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccountApiService.html",[0,0.587,1,1.731]],["body/injectables/AccountApiService.html",[0,0.902,1,2.658,2,1.541,3,0.498,4,0.498,5,0.376,6,4.311,7,3.078,8,0.436,9,1.624,10,4.735,11,1.401,12,3.719,13,5.485,14,1.108,15,3.719,16,1.222,17,0.036,18,1.002,19,0.478,20,1.002,21,4.735,22,4.735,23,0.698,24,3.719,25,1.878,26,1.401,27,0.635,28,2.655,29,0.96,30,1.878,31,1.878,32,0.498,33,0.319,34,2.655,35,0.87,36,3.719,37,0.028,38,0.028]],["title/injectables/AccountService.html",[0,0.587,39,1.557]],["body/injectables/AccountService.html",[0,0.739,2,1.146,3,0.37,4,0.37,5,0.279,8,0.324,9,1.332,11,1.042,14,1.244,16,0.714,17,0.037,18,0.585,19,0.492,20,0.585,26,1.463,27,0.712,29,0.714,30,1.396,31,1.396,32,0.37,33,0.237,34,1.974,37,0.023,38,0.023,39,1.96,40,2.288,41,1.002,42,3.178,43,2.262,44,4.487,45,2.057,46,4.866,47,2.288,48,4.398,49,3.882,50,2.765,51,1.96,52,2.765,53,1.539,54,0.863,55,0.863,56,2.519,57,5.125,58,4.026,59,3.213,60,4.487,61,2.765,62,2.765,63,2.765,64,1.262,65,1.974,66,1.739,67,0.948,68,1.042,69,1.463,70,2.288,71,3.882,72,1.974,73,1.974,74,1.974,75,2.765,76,2.765,77,2.765,78,3.882]],["title/injectables/AccountState.html",[0,0.587,79,1.557]],["body/injectables/AccountState.html",[0,0.6,1,2.564,2,0.862,3,0.279,4,0.279,5,0.21,8,0.244,9,1.082,11,0.784,14,1.125,16,1.179,17,0.037,18,1.017,19,0.486,20,0.966,23,0.51,25,1.592,26,1.601,27,0.644,29,0.537,32,0.51,33,0.178,35,0.487,37,0.019,38,0.019,41,0.814,42,1.77,43,1.307,45,1.601,53,0.713,56,1.77,58,2.61,59,3.517,64,0.95,65,1.485,67,1.713,68,1.882,69,1.601,79,1.592,80,1.308,81,3.517,82,3.95,83,2.08,84,2.08,85,2.08,86,4.632,87,2.61,88,2.08,89,2.08,90,2.61,91,2.08,92,2.08,93,2.61,94,2.08,95,2.08,96,2.61,97,2.08,98,2.08,99,1.721,100,2.719,101,3.152,102,1.77,103,1.721,104,1.721,105,1.721,106,0.713,107,1.77,108,1.984,109,3.432,110,1.188,111,1.592,112,3.024,113,2.719,114,1.761,115,1.308,116,0.95,117,1.721,118,1.05,119,3.978,120,1.923,121,1.721,122,1.721,123,1.485,124,2.251,125,1.721,126,2.61,127,1.721,128,1.721,129,1.721,130,1.721]],["title/interfaces/AccountStateModel.html",[53,1.058,106,1.058]],["body/interfaces/AccountStateModel.html",[0,0.654,1,1.927,3,0.312,4,0.312,5,0.235,8,0.273,17,0.037,18,0.493,19,0.507,23,0.751,25,2.42,27,0.672,29,0.601,32,0.546,33,0.2,35,0.545,37,0.02,38,0.02,41,0.886,43,1.422,45,1.293,53,1.177,56,1.927,64,1.064,65,1.663,67,1.398,68,1.536,69,1.293,79,1.176,80,1.466,81,1.928,82,3.21,86,3.967,87,1.928,90,1.928,93,1.928,96,1.928,99,1.928,100,2.909,101,3.372,102,2.524,103,1.928,104,1.928,105,1.928,106,0.799,107,2.691,108,3.015,109,3.878,110,1.889,111,2.27,112,3.417,113,3.58,114,1.863,115,1.466,116,1.064,117,1.928,118,1.176,119,4.15,120,2.058,121,1.928,122,1.928,123,1.663,124,2.451,125,1.928,126,2.84,127,1.928,128,1.928,129,1.928,130,1.928,131,1.308]],["title/injectables/AuthenticationService.html",[0,0.587,132,1.731]],["body/injectables/AuthenticationService.html",[0,0.865,2,1.445,3,0.467,4,0.467,5,0.352,8,0.408,9,1.559,11,1.314,14,1.063,16,0.9,17,0.037,18,0.738,19,0.352,20,0.738,26,1.314,27,0.677,29,0.9,30,1.761,31,1.761,32,0.467,33,0.299,34,2.49,35,1.063,37,0.027,38,0.027,39,2.874,114,2.094,116,1.593,123,2.49,132,2.551,133,2.886,134,4.431,135,3.488,136,3.488,137,3.488,138,3.76,139,2.551,140,2.886,141,2.49,142,4.544,143,3.488,144,2.194,145,4.544,146,3.488,147,3.488,148,4.544,149,3.488]],["title/interfaces/DecodedLoginTokenType.html",[106,1.058,150,1.731]],["body/interfaces/DecodedLoginTokenType.html",[3,0.388,4,0.388,5,0.292,8,0.339,17,0.037,19,0.545,20,0.847,23,0.741,27,0.537,32,0.537,35,1.161,37,0.024,38,0.024,41,1.034,106,0.992,110,1.87,111,2.505,114,2.159,131,1.623,139,1.623,150,2.58,151,2.065,152,3.848,153,3.848,154,3.848,155,3.848,156,3.315,157,1.819,158,2.393,159,2.065,160,2.892,161,2.892,162,1.819,163,3.542,164,2.393,165,2.86,166,2.393,167,2.065,168,2.065,169,2.065,170,2.065,171,2.86,172,2.86,173,2.065,174,2.86,175,2.065,176,2.065,177,2.065,178,3.315,179,2.393,180,3.315,181,2.393,182,2.393,183,2.065,184,3.315,185,2.393]],["title/interfaces/DecodedNativeAuthTokenType.html",[106,1.058,186,1.94]],["body/interfaces/DecodedNativeAuthTokenType.html",[3,0.363,4,0.363,5,0.274,8,0.317,17,0.037,19,0.448,23,0.774,25,2.74,27,0.513,32,0.363,35,1.235,37,0.022,38,0.022,41,0.988,106,0.929,107,2.148,111,2.435,114,2.248,116,1.237,131,1.52,139,1.52,150,2.491,152,1.934,153,1.934,154,1.934,155,1.934,157,1.704,158,2.241,162,2.791,163,1.934,165,2.732,167,1.934,169,1.934,170,1.934,171,1.934,172,1.934,173,1.934,174,2.732,175,1.934,176,1.934,177,1.934,183,1.934,186,2.791,187,1.704,188,3.167,189,4.49,190,3.874,191,1.934,192,2.241,193,2.709,194,3.167,195,2.241,196,2.241,197,2.241,198,3.672,199,2.241,200,3.672,201,2.241,202,3.672,203,2.241,204,3.167,205,1.934,206,3.167,207,2.241,208,2.241,209,2.241]],["title/injectables/ExtensionProviderService.html",[0,0.587,210,1.94]],["body/injectables/ExtensionProviderService.html",[0,0.632,2,0.923,3,0.299,4,0.299,5,0.225,8,0.261,9,1.139,11,1.251,14,1.029,16,1.025,17,0.037,18,0.84,19,0.401,20,0.84,23,0.532,25,1.676,26,1.496,27,0.732,29,0.575,30,1.125,31,1.125,32,0.299,33,0.191,35,0.777,37,0.019,38,0.019,39,2.652,43,0.923,47,1.843,48,4.346,51,1.676,53,1.509,64,1.017,66,1.401,67,1.139,70,1.843,82,3.522,102,1.25,107,1.864,108,1.401,114,2.044,124,3.141,132,2.948,141,1.59,188,2.748,190,2.834,210,2.089,211,1.843,212,3.64,213,2.37,214,3.141,215,2.748,216,4.229,217,2.228,218,2.37,219,2.228,220,2.37,221,1.401,222,3.141,223,2.228,224,3.32,225,2.228,226,2.228,227,1.843,228,2.748,229,1.843,230,2.228,231,2.228,232,2.228,233,2.228,234,3.969,235,1.843,236,2.748,237,2.228,238,2.228,239,2.228,240,3.969,241,4.399,242,2.228,243,3.32,244,3.32,245,3.32,246,2.228,247,1.401,248,1.516,249,2.228,250,2.228,251,2.228,252,2.228,253,2.228,254,2.228,255,2.228,256,1.843,257,2.228,258,2.228,259,2.228,260,2.228,261,2.228,262,2.228]],["title/pipes/FormatAmountPipe.html",[263,1.408,264,1.557]],["body/pipes/FormatAmountPipe.html",[3,0.483,4,0.483,5,0.364,9,1.237,14,0.844,16,0.931,17,0.037,18,1.086,19,0.519,20,0.763,23,0.688,27,0.622,29,0.931,32,0.483,33,0.309,35,0.844,37,0.027,38,0.027,54,1.126,55,1.604,156,3.842,263,2.12,264,2.344,265,2.574,266,3.842,267,2.574,268,2.984,269,3.411,270,2.984,271,3.842,272,5.422,273,3.044,274,2.984,275,3.842,276,3.606,277,2.268,278,3.606,279,2.574]],["title/interfaces/FormatAmountType.html",[106,1.058,273,1.731]],["body/interfaces/FormatAmountType.html",[3,0.264,4,0.264,5,0.199,8,0.231,17,0.037,19,0.475,20,1.12,23,0.597,27,0.597,32,0.405,35,1.213,37,0.018,38,0.018,41,0.781,106,0.675,110,1.773,112,1.238,114,2.34,116,1.381,131,1.105,138,4.291,144,2.599,191,1.405,228,1.629,247,1.238,248,2.148,263,1.381,269,1.238,273,2.066,279,3.61,280,1.405,281,3.688,282,2.838,283,3.437,284,3.893,285,4.291,286,1.969,287,1.969,288,1.969,289,1.969,290,2.159,291,1.969,292,2.159,293,1.969,294,1.969,295,1.969,296,1.969,297,1.969,298,3.024,299,1.969,300,3.681,301,1.969,302,1.969,303,1.969,304,1.969,305,3.024,306,1.969,307,1.969,308,3.024,309,1.969,310,1.969,311,1.969,312,1.969,313,1.969,314,3.024,315,1.969,316,1.969,317,1.969,318,3.024,319,1.969,320,3.024,321,1.969,322,1.969,323,1.969,324,1.969,325,3.681,326,1.969,327,1.405,328,3.024,329,1.969,330,3.681,331,4.131,332,3.024,333,3.681,334,1.969,335,1.969,336,1.969,337,1.969,338,1.969,339,1.969,340,1.969,341,1.969,342,1.969,343,3.024,344,1.969,345,1.969,346,1.969,347,1.969,348,3.024,349,3.024,350,1.969,351,1.969]],["title/classes/LoginAccount.html",[33,0.264,67,1.058]],["body/classes/LoginAccount.html",[3,0.428,4,0.428,5,0.323,8,0.374,11,1.204,14,1.133,16,0.825,17,0.037,18,0.676,19,0.59,20,0.676,23,0.428,27,0.428,32,0.693,33,0.443,37,0.025,38,0.025,41,1.107,42,2.407,43,2.446,45,1.204,53,1.096,54,0.998,55,0.998,67,1.471,68,1.204,69,1.204,118,2.165,120,2.724,352,1.613,353,1.794,354,2.804,355,3.494,356,2.644,357,3.628,358,4.288,359,3.195,360,2.717,361,3.254,362,2.01,363,1.613,364,2.01]],["title/classes/MyStorageEngine.html",[33,0.264,365,1.94]],["body/classes/MyStorageEngine.html",[3,0.307,4,0.307,5,0.232,8,0.269,9,1.164,14,1.167,16,1.043,17,0.037,18,0.854,19,0.451,20,0.854,23,0.737,26,1.682,27,0.725,28,1.638,29,0.592,32,0.455,33,0.291,35,0.794,37,0.02,38,0.02,41,0.876,51,2.518,54,0.717,55,0.717,64,1.048,66,1.444,72,1.638,73,1.638,74,1.638,79,1.159,110,0.865,264,2.04,277,2.135,352,1.159,354,2.04,365,2.541,366,3.684,367,3.403,368,1.638,369,3.343,370,3.343,371,3.694,372,3.394,373,3.394,374,3.394,375,2.809,376,3.694,377,2.423,378,2.809,379,2.295,380,2.295,381,2.809,382,2.295,383,4.127,384,2.809,385,2.295,386,2.809,387,3.694,388,2.295,389,2.295,390,2.295,391,2.809,392,1.899,393,1.899,394,2.809,395,1.899,396,1.899,397,1.899,398,2.809,399,1.899,400,2.809,401,2.809,402,1.638,403,2.04,404,1.899,405,1.899,406,2.809,407,1.899,408,1.899,409,1.899,410,1.899,411,1.899,412,1.899,413,1.899,414,1.899,415,1.899,416,1.899,417,1.899,418,1.899,419,1.899,420,1.899,421,1.899,422,1.899,423,1.288]],["title/modules/NgxSdkDappModule.html",[423,1.731,424,2.552]],["body/modules/NgxSdkDappModule.html",[3,0.35,4,0.35,5,0.264,17,0.037,23,0.583,27,0.749,28,1.867,29,0.675,32,0.5,33,0.32,35,0.874,37,0.022,38,0.022,51,2.198,64,1.194,66,1.645,72,1.867,73,1.867,74,1.867,79,1.321,110,0.986,264,2.926,277,1.645,354,1.321,363,1.321,365,2.348,366,1.867,367,2.348,368,1.867,369,3.089,370,2.164,371,2.164,376,3.089,377,1.867,378,2.164,381,2.164,383,3.602,384,2.164,386,2.164,387,3.089,391,3.089,392,2.164,393,2.164,394,3.089,395,2.164,396,2.164,397,2.164,398,3.089,399,2.164,400,3.089,401,3.089,402,1.867,403,2.926,404,2.164,405,2.164,406,3.089,407,2.164,408,2.164,409,2.164,410,2.164,411,2.164,412,2.164,413,2.164,414,3.089,415,2.164,416,2.164,417,2.164,418,2.164,419,2.164,420,2.164,421,2.164,422,3.089,423,3.183,425,1.867,426,2.348,427,2.164,428,2.164,429,2.164,430,3.089,431,1.867]],["title/pipes/ParseAmountPipe.html",[263,1.408,403,1.557]],["body/pipes/ParseAmountPipe.html",[3,0.505,4,0.505,5,0.381,9,1.294,14,0.883,16,0.974,17,0.036,18,1.109,19,0.381,20,0.798,23,0.762,26,1.421,27,0.64,29,0.974,32,0.505,33,0.323,35,0.883,37,0.028,38,0.028,55,1.178,110,1.976,140,3.121,221,2.373,263,2.182,265,2.693,267,2.693,268,3.121,270,3.121,271,3.954,274,3.121,275,3.954,277,2.373,282,3.095,403,2.412,432,3.954,433,3.744,434,3.772]],["title/classes/PatchAccount.html",[33,0.264,68,1.162]],["body/classes/PatchAccount.html",[3,0.428,4,0.428,5,0.323,8,0.374,11,1.204,14,1.133,16,0.825,17,0.037,18,0.676,19,0.59,20,0.676,23,0.428,27,0.428,32,0.693,33,0.443,37,0.025,38,0.025,41,1.107,42,2.407,43,2.446,45,1.204,53,1.096,54,0.998,55,0.998,67,1.096,68,1.616,69,1.204,118,2.165,120,2.724,352,1.613,353,1.794,354,2.804,355,3.494,356,2.644,357,3.628,360,2.717,361,3.254,362,2.01,363,1.613,364,2.01,435,4.288,436,3.195]],["title/injectables/PermissionsProviderService.html",[0,0.587,437,2.202]],["body/injectables/PermissionsProviderService.html",[0,0.641,2,0.941,3,0.304,4,0.304,5,0.229,8,0.266,9,1.155,11,1.269,14,1.11,16,1.146,17,0.037,18,0.939,19,0.449,20,0.939,23,0.666,26,1.512,27,0.666,29,0.586,30,1.146,31,1.146,32,0.304,33,0.195,35,0.939,37,0.02,38,0.02,39,2.724,42,2.886,51,1.146,54,0.709,102,2.662,111,2.395,115,1.428,132,2.492,141,1.621,210,3.235,212,2.787,213,2.404,214,2.404,218,2.404,220,2.404,221,2.118,222,3.17,227,2.787,235,1.879,236,3.924,247,2.118,248,1.538,256,1.879,360,2.253,375,2.787,437,2.404,438,1.879,439,3.367,440,4.968,441,2.27,442,4.014,443,2.27,444,2.27,445,3.367,446,2.27,447,3.367,448,2.27,449,3.367,450,2.27,451,2.27,452,2.27,453,2.793,454,2.27,455,2.27,456,2.27,457,2.27,458,4.742,459,2.27,460,2.27,461,2.27,462,2.27,463,2.27,464,2.27,465,2.27,466,2.27,467,2.27,468,3.367,469,2.27,470,3.367,471,2.27,472,3.367,473,2.27]],["title/classes/RefetchAccountData.html",[33,0.264,45,1.162]],["body/classes/RefetchAccountData.html",[3,0.458,4,0.458,5,0.346,8,0.401,14,0.801,17,0.037,19,0.583,23,0.458,27,0.458,32,0.712,33,0.455,37,0.026,38,0.026,41,1.158,43,2.476,45,1.69,53,1.173,54,1.068,55,1.068,67,1.173,68,1.289,69,1.289,118,2.265,120,2.265,352,1.727,353,1.92,354,2.859,355,3.562,357,3.343,360,2.518,361,3.343,362,2.152,363,1.727,364,2.822,474,3.421]],["title/classes/ResetAccount.html",[33,0.264,69,1.162]],["body/classes/ResetAccount.html",[3,0.46,4,0.46,5,0.347,8,0.402,14,0.803,17,0.037,19,0.583,23,0.46,27,0.46,32,0.713,33,0.456,37,0.026,38,0.026,41,1.161,43,2.477,45,1.293,53,1.177,54,1.072,55,1.072,67,1.177,68,1.293,69,1.694,118,2.27,120,2.27,352,1.733,353,1.926,354,2.861,355,3.565,357,3.347,360,2.524,361,3.154,362,2.159,363,2.27,364,2.159,475,3.432]],["title/injectables/XPortalProviderService.html",[0,0.587,453,1.94]],["body/injectables/XPortalProviderService.html",[0,0.856,2,1.422,3,0.46,4,0.46,5,0.347,8,0.402,9,1.542,11,1.889,14,1.245,16,0.886,17,0.036,18,0.726,19,0.347,20,0.726,23,0.672,26,1.889,27,0.46,29,0.886,30,1.733,31,1.733,32,0.46,33,0.294,37,0.026,38,0.026,51,2.27,213,3.21,214,3.799,215,4.403,218,3.21,220,2.45,221,2.159,222,3.799,247,3.154,248,2.289,453,2.828,476,4.571,477,2.84,478,3.432,479,3.432,480,3.432,481,3.432,482,5.014,483,5.014]],["title/coverage.html",[484,3.464]],["body/coverage.html",[0,1.005,1,1.387,5,0.25,6,2.044,7,2.044,17,0.037,19,0.25,33,0.421,37,0.021,38,0.021,39,1.247,40,2.044,45,0.931,53,0.847,56,1.387,67,0.847,68,0.931,69,0.931,79,1.247,80,2.651,106,1.586,116,2.835,132,1.387,133,2.044,139,1.387,150,1.387,151,2.558,157,1.554,159,1.764,162,1.554,186,1.554,187,2.651,191,3.77,210,1.554,211,2.044,248,1.128,263,1.925,264,1.247,266,2.044,267,2.558,269,1.554,273,1.387,280,2.558,282,1.387,283,1.554,290,1.764,292,1.764,353,2.595,365,1.554,366,1.764,367,1.554,368,1.764,403,1.247,432,2.044,433,1.764,437,1.764,438,2.044,453,1.554,476,2.044,477,2.044,484,2.044,485,2.47,486,2.47,487,2.47,488,3.488,489,5.409,490,5.943,491,3.488,492,2.044,493,2.044,494,2.044,495,2.044,496,4.623,497,4.215,498,4.623,499,2.044,500,2.044,501,2.044,502,2.47,503,3.582,504,3.582,505,2.47,506,2.47]],["title/dependencies.html",[426,2.329,507,2.14]],["body/dependencies.html",[17,0.036,29,1.178,37,0.032,38,0.032,64,2.083,402,3.257,426,3.376,508,4.562,509,4.562,510,4.562,511,4.562,512,5.367]],["title/miscellaneous/enumerations.html",[513,1.306,514,3.064]],["body/miscellaneous/enumerations.html",[8,0.541,17,0.034,37,0.032,38,0.032,55,1.443,102,3.035,205,3.299,229,4.475,513,2.333,514,3.824,515,4.621,516,4.621]],["title/miscellaneous/functions.html",[513,1.306,517,3.064]],["body/miscellaneous/functions.html",[8,0.374,16,1.465,17,0.034,18,1.2,19,0.573,20,1.2,23,0.798,37,0.025,38,0.025,54,1.339,55,1.339,110,1.616,144,3.044,157,2.697,159,3.061,187,2.01,192,2.644,263,1.958,269,2.697,273,2.407,279,3.061,280,2.281,281,3.548,282,3.118,283,3.044,284,3.548,285,3.548,433,3.061,491,2.644,492,3.548,493,3.548,499,2.644,500,2.644,513,1.613,517,2.644,518,4.84,519,3.195,520,2.644,521,3.195,522,3.195,523,3.195,524,3.195,525,3.195,526,3.195,527,3.195,528,3.195,529,3.195,530,3.195,531,4.288,532,3.195]],["title/index.html",[8,0.303,533,2.586,534,2.586]],["body/index.html",[5,0.331,17,0.026,18,0.692,37,0.026,38,0.026,54,1.022,248,1.495,367,3.591,377,3.993,431,2.337,535,3.274,536,4.358,537,3.274,538,4.899,539,4.899,540,2.709,541,3.274,542,3.274,543,3.274,544,5.223,545,5.593,546,4.899,547,4.899,548,5.439,549,5.708,550,4.358,551,3.274,552,3.274,553,3.274,554,3.274,555,3.274,556,3.274,557,3.274,558,5.439,559,3.274,560,3.274,561,4.358,562,3.274,563,3.274,564,3.274,565,4.358,566,3.274,567,3.274,568,3.274,569,3.274,570,3.274,571,3.274,572,4.358,573,4.358,574,3.274,575,3.274,576,3.274,577,3.274,578,3.274,579,4.899,580,3.274,581,3.274,582,2.337,583,3.274,584,3.274,585,3.274]],["title/modules.html",[425,2.989]],["body/modules.html",[17,0.032,37,0.032,38,0.032,423,2.663,425,3.387,586,4.745,587,4.745,588,4.745,589,4.745]],["title/overview.html",[582,2.989]],["body/overview.html",[2,1.669,17,0.035,37,0.029,38,0.029,131,2.261,168,2.876,264,3.023,265,2.876,327,2.876,352,2.034,363,2.034,403,3.023,423,3.395,424,3.333,426,3.132,427,3.333,428,3.333,429,3.333,430,4.12,431,2.876,582,2.876,590,4.028,591,4.028,592,4.028]],["title/properties.html",[41,0.956,507,2.14]],["body/properties.html",[17,0.034,37,0.032,38,0.032,41,1.236,540,3.962,593,4.787]],["title/miscellaneous/variables.html",[513,1.306,594,3.064]],["body/miscellaneous/variables.html",[8,0.223,17,0.037,19,0.443,23,0.544,25,2.048,35,1.268,37,0.017,38,0.017,54,1.561,55,1.561,56,1.653,80,1.196,100,1.358,107,2.022,108,1.196,109,1.358,110,1.109,111,2.592,112,1.196,113,1.358,114,2.324,115,1.196,116,1.852,134,2.981,139,2.022,144,1.196,150,1.068,151,1.358,152,2.572,153,2.572,154,2.572,155,2.572,162,2.266,163,3.132,164,1.574,165,2.896,166,1.574,167,2.102,168,2.102,169,2.102,170,2.102,171,2.572,172,2.572,173,2.102,174,2.896,175,2.102,176,2.102,177,2.102,178,2.437,179,1.574,180,2.437,181,1.574,182,1.574,183,2.102,184,2.437,185,1.574,186,1.196,187,1.196,189,2.981,190,2.572,194,2.437,195,1.574,196,1.574,197,1.574,198,2.981,199,1.574,200,2.981,201,1.574,202,2.981,203,1.574,204,2.437,205,1.358,206,2.437,207,1.574,208,1.574,209,1.574,216,1.574,248,0.868,282,1.653,283,1.852,290,2.102,292,2.102,327,1.358,488,1.574,494,1.574,495,2.437,501,1.574,513,0.96,520,1.574,594,1.574,595,1.902,596,1.902,597,3.603,598,1.902,599,1.902,600,1.902,601,1.902,602,1.902,603,1.902,604,1.902,605,1.902,606,1.902,607,1.902,608,1.902,609,1.902,610,2.944,611,1.902,612,2.944,613,1.902,614,1.902,615,1.902,616,1.902,617,1.902,618,2.944,619,1.902,620,1.902]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":593,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["00..1",{"_index":340,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["0].join",{"_index":337,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["1",{"_index":327,"title":{},"body":{"interfaces/FormatAmountType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).fill(0",{"_index":335,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["1000",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["15.2.0",{"_index":541,"title":{},"body":{"index.html":{}}}],["15.2.1",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1].join",{"_index":339,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["2",{"_index":591,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":197,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["3.7.6",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":168,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":592,"title":{},"body":{"overview.html":{}}}],["7",{"_index":590,"title":{},"body":{"overview.html":{}}}],["_provider",{"_index":456,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["accessors",{"_index":375,"title":{},"body":{"classes/MyStorageEngine.html":{},"injectables/PermissionsProviderService.html":{}}}],["accesstoken",{"_index":107,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"miscellaneous/variables.html":{}}}],["accesstoken.split",{"_index":196,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":43,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["account.actions",{"_index":105,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["account.slice",{"_index":362,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["account/account.service",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["accountapi",{"_index":81,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["accountapiservice",{"_index":1,"title":{"injectables/AccountApiService.html":{}},"body":{"injectables/AccountApiService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"coverage.html":{}}}],["accountdataloading",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountinitialstate",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountservice",{"_index":39,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"coverage.html":{}}}],["accountservice.account.currentprovider",{"_index":460,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["accountstate",{"_index":79,"title":{"injectables/AccountState.html":{}},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{}}}],["accountstatemodel",{"_index":53,"title":{"interfaces/AccountStateModel.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["action",{"_index":99,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["action(loginaccount",{"_index":87,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["action(patchaccount",{"_index":90,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["action(refetchaccountdata",{"_index":93,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["action(resetaccount",{"_index":96,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["actionsexecuting",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{}}}],["activatedroutesnapshot",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":555,"title":{},"body":{"index.html":{}}}],["addcommas",{"_index":281,"title":{},"body":{"interfaces/FormatAmountType.html":{},"miscellaneous/functions.html":{}}}],["added",{"_index":556,"title":{},"body":{"index.html":{}}}],["address",{"_index":25,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amount.pipe",{"_index":400,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["amount.pipe.ts",{"_index":267,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{},"coverage.html":{}}}],["amount.pipe.ts:8",{"_index":274,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}}}],["angular",{"_index":538,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":557,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":402,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":28,"title":{},"body":{"injectables/AccountApiService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":226,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["api.service",{"_index":104,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["api.service.ts",{"_index":7,"title":{},"body":{"injectables/AccountApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":24,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["api.service.ts:7",{"_index":15,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["array(digits",{"_index":334,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["array(noofzerosatend).fill(0).join",{"_index":346,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["artifacts",{"_index":559,"title":{},"body":{"index.html":{}}}],["async",{"_index":82,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{}}}],["auth",{"_index":233,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["authentication/authentication.service",{"_index":235,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["authenticationservice",{"_index":132,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"coverage.html":{}}}],["authservice",{"_index":442,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["authservice.isauthenticated",{"_index":461,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["await",{"_index":124,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{}}}],["balance",{"_index":112,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/FormatAmountType.html":{},"miscellaneous/variables.html":{}}}],["balance.split",{"_index":315,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["base64utils",{"_index":158,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{}}}],["bignumber",{"_index":288,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber(current",{"_index":310,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber(decimalpart",{"_index":317,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber(input).isnegative",{"_index":299,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber(integerpart).iszero",{"_index":329,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber(stringinteger",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bignumber.config",{"_index":293,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber.js",{"_index":289,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bignumber.round_floor",{"_index":295,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["blockhash",{"_index":152,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["bnbalance",{"_index":309,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bnbalance.iszero",{"_index":311,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bnbalance.tostring(10",{"_index":312,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bndecimalpart",{"_index":316,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["bnparsed",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bnparsed.comparedto(0",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bnparsed.tostring(10",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":189,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FormatAmountType.html":{}}}],["break",{"_index":470,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["browse",{"_index":589,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":586,"title":{},"body":{"modules.html":{}}}],["build",{"_index":558,"title":{},"body":{"index.html":{}}}],["building",{"_index":564,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivateroute",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":467,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["catch",{"_index":183,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":567,"title":{},"body":{"index.html":{}}}],["check",{"_index":581,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{}}}],["classes",{"_index":352,"title":{},"body":{"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"overview.html":{}}}],["clear",{"_index":371,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["cli",{"_index":539,"title":{},"body":{"index.html":{}}}],["client",{"_index":234,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["client.gettoken(address",{"_index":254,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["cluster_ngxsdkdappmodule",{"_index":427,"title":{},"body":{"modules/NgxSdkDappModule.html":{},"overview.html":{}}}],["cluster_ngxsdkdappmodule_declarations",{"_index":428,"title":{},"body":{"modules/NgxSdkDappModule.html":{},"overview.html":{}}}],["cluster_ngxsdkdappmodule_exports",{"_index":429,"title":{},"body":{"modules/NgxSdkDappModule.html":{},"overview.html":{}}}],["code",{"_index":542,"title":{},"body":{"index.html":{}}}],["command",{"_index":583,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":401,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["component",{"_index":547,"title":{},"body":{"index.html":{}}}],["connect",{"_index":213,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["connect(navafterconnectroute",{"_index":218,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["console.error",{"_index":169,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["console.error(`error",{"_index":185,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":114,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"interfaces/FormatAmountType.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":291,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["constructor(accountapi",{"_index":83,"title":{},"body":{"injectables/AccountState.html":{}}}],["constructor(accountservice",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(extensionprovider",{"_index":441,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["constructor(http",{"_index":12,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["constructor(payload",{"_index":356,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(public",{"_index":118,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["constructor(store",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ExtensionProviderService.html":{}}}],["core",{"_index":287,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["coverage",{"_index":484,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":349,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["current.split",{"_index":332,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["currentprovider",{"_index":108,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dapp",{"_index":549,"title":{},"body":{"index.html":{}}}],["dapp.module.ts",{"_index":368,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{}}}],["dapp.module.ts:16",{"_index":379,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp.module.ts:17",{"_index":390,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp.module.ts:23",{"_index":382,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp.module.ts:27",{"_index":388,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp.module.ts:31",{"_index":385,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp.module.ts:35",{"_index":380,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["dapp_",{"_index":378,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["data",{"_index":361,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["date.now",{"_index":123,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{}}}],["decimalpart",{"_index":314,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["decimalpart.substring(0",{"_index":342,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["decimalplaces",{"_index":318,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["decimals",{"_index":282,"title":{},"body":{"interfaces/FormatAmountType.html":{},"pipes/ParseAmountPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decimalside",{"_index":331,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["decimalside.length",{"_index":344,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["decimalside}${zeropadding",{"_index":347,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["declarations",{"_index":414,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["decode",{"_index":172,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["decodebase64",{"_index":157,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decodebase64(address",{"_index":199,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(body",{"_index":201,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(origin",{"_index":181,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(string",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoded",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["decoded.ttl",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["decodedlogintokentype",{"_index":150,"title":{"interfaces/DecodedLoginTokenType.html":{}},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodednativeauthtokentype",{"_index":186,"title":{"interfaces/DecodedNativeAuthTokenType.html":{}},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodelogintoken",{"_index":162,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodelogintoken(parsedbody",{"_index":203,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["decodenativeauthtoken",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":117,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["defined",{"_index":14,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{}}}],["delete",{"_index":206,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":426,"title":{"dependencies.html":{}},"body":{"modules/NgxSdkDappModule.html":{},"dependencies.html":{},"overview.html":{}}}],["digits",{"_index":283,"title":{},"body":{"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":551,"title":{},"body":{"index.html":{}}}],["directory",{"_index":562,"title":{},"body":{"index.html":{}}}],["dist",{"_index":561,"title":{},"body":{"index.html":{}}}],["dist/ngx",{"_index":568,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":553,"title":{},"body":{"index.html":{}}}],["e",{"_index":184,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":205,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["encodetobase64",{"_index":492,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encodetobase64(string",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enumerations",{"_index":514,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":209,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["error('extension",{"_index":249,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["error('invalid",{"_index":297,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["error('method",{"_index":482,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["error('provider",{"_index":472,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["execute",{"_index":575,"title":{},"body":{"index.html":{}}}],["executing",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["export",{"_index":32,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{}}}],["exports",{"_index":422,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["extends",{"_index":188,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{}}}],["extension",{"_index":229,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"miscellaneous/enumerations.html":{}}}],["extension/extensionprovider.service",{"_index":452,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["extensioninitialized",{"_index":245,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensioninstance",{"_index":243,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensioninstance.account",{"_index":253,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensioninstance.init",{"_index":246,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensioninstance.login",{"_index":251,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensioninstance.logout",{"_index":258,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensionprovider",{"_index":227,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["extensionprovider.getinstance",{"_index":244,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensionprovider.getinstance().init",{"_index":261,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensionprovider.getinstance().setaddress(account.address",{"_index":262,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["extensionproviderservice",{"_index":210,"title":{"injectables/ExtensionProviderService.html":{}},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"coverage.html":{}}}],["extrainfo",{"_index":153,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":144,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FormatAmountType.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"index.html":{}}}],["filter((x",{"_index":411,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["folder",{"_index":566,"title":{},"body":{"index.html":{}}}],["foreach((x",{"_index":412,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["forget",{"_index":554,"title":{},"body":{"index.html":{}}}],["format",{"_index":305,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["formatamount",{"_index":269,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatamount(__namedparameters",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatamountpipe",{"_index":264,"title":{"pipes/FormatAmountPipe.html":{}},"body":{"pipes/FormatAmountPipe.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{},"overview.html":{}}}],["formatamounttype",{"_index":273,"title":{"interfaces/FormatAmountType.html":{}},"body":{"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatoptions",{"_index":272,"title":{},"body":{"pipes/FormatAmountPipe.html":{}}}],["formattedbalance",{"_index":350,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["function",{"_index":191,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{},"coverage.html":{}}}],["functions",{"_index":517,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":578,"title":{},"body":{"index.html":{}}}],["generate",{"_index":546,"title":{},"body":{"index.html":{}}}],["generated",{"_index":537,"title":{},"body":{"index.html":{}}}],["genericprovider",{"_index":212,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["getaccount",{"_index":10,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["getaccount(address",{"_index":22,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["getitem",{"_index":372,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["getitem(key",{"_index":381,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["getlength",{"_index":389,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["getprovider",{"_index":450,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["getstate",{"_index":126,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["getting",{"_index":533,"title":{"index.html":{}},"body":{}}],["go",{"_index":565,"title":{},"body":{"index.html":{}}}],["help",{"_index":579,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{},"pipes/ParseAmountPipe.html":{}}}],["helpers/formatamount",{"_index":276,"title":{},"body":{"pipes/FormatAmountPipe.html":{}}}],["http",{"_index":21,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["httpclient",{"_index":13,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["httpclientmodule",{"_index":398,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["identifier",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["if(bndecimalpart.iszero",{"_index":322,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["if(boolean(decimalpart",{"_index":320,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["if(isnegative",{"_index":351,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["implemented",{"_index":483,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["implements",{"_index":277,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{}}}],["import",{"_index":27,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{}}}],["imports",{"_index":415,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{}}}],["init",{"_index":241,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["initialized",{"_index":250,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["inject(accountservice).resettoinitialstate",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(authenticationservice).isauthenticated",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"overview.html":{}}}],["input",{"_index":279,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"miscellaneous/functions.html":{}}}],["input.substring(1",{"_index":303,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["instead",{"_index":177,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integerpart",{"_index":313,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["integerpartzero",{"_index":328,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["interface",{"_index":106,"title":{"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{}},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{},"coverage.html":{}}}],["interfaces",{"_index":131,"title":{},"body":{"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{},"overview.html":{}}}],["invalid",{"_index":170,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["isnegative",{"_index":298,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["isstring",{"_index":159,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isstring(accesstoken",{"_index":195,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["isstring(logintoken",{"_index":164,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["isstring(x",{"_index":192,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/functions.html":{}}}],["isstringbase64",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isstringbase64(string",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["istokenvalid",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(decodebase64(extrainfo",{"_index":179,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["karma",{"_index":577,"title":{},"body":{"index.html":{}}}],["key",{"_index":383,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["labs/actions",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["lastvaluefrom",{"_index":101,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["length",{"_index":376,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["library",{"_index":536,"title":{},"body":{"index.html":{}}}],["limit",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":156,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"pipes/FormatAmountPipe.html":{}}}],["localaccountservice",{"_index":457,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["localstorage.getitem(mystorageengine.storage_prefix",{"_index":407,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["localstorage.removeitem(mystorageengine.storage_prefix",{"_index":409,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["localstorage.removeitem(x",{"_index":413,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["localstorage.setitem(mystorageengine.storage_prefix",{"_index":408,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["localstore",{"_index":237,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["lodash",{"_index":160,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{}}}],["loginaccount",{"_index":67,"title":{"classes/LoginAccount.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["loginaccount(undefined",{"_index":85,"title":{},"body":{"injectables/AccountState.html":{}}}],["logintimestamp",{"_index":113,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"miscellaneous/variables.html":{}}}],["logintoken",{"_index":163,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["logintoken.split",{"_index":166,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":214,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["logout(navafterconnectroute",{"_index":445,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["matching",{"_index":38,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(decimalpart.length",{"_index":321,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["math.min(decimalpart.length",{"_index":324,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["metadata",{"_index":268,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}}}],["method",{"_index":176,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["millisecondsttl",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["minamount",{"_index":338,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["miscellaneous",{"_index":513,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modinput",{"_index":300,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["module",{"_index":424,"title":{"modules/NgxSdkDappModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":425,"title":{"modules.html":{}},"body":{"modules/NgxSdkDappModule.html":{},"modules.html":{}}}],["more",{"_index":580,"title":{},"body":{"index.html":{}}}],["multiversx/sdk",{"_index":228,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"interfaces/FormatAmountType.html":{}}}],["mystorageengine",{"_index":365,"title":{"classes/MyStorageEngine.html":{}},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{}}}],["name",{"_index":18,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["native",{"_index":232,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["nativeauthclient",{"_index":231,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["nativeauthtoken",{"_index":173,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["navafterconnectroute",{"_index":220,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["new",{"_index":248,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"interfaces/FormatAmountType.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":545,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":391,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngx",{"_index":377,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"index.html":{}}}],["ngxs",{"_index":72,"title":{},"body":{"injectables/AccountService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxs/account/account.actions",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ExtensionProviderService.html":{}}}],["ngxs/account/account.slice",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ExtensionProviderService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxs/storage",{"_index":395,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxs/store",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"dependencies.html":{}}}],["ngxsactionsexecutingmodule",{"_index":392,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxsactionsexecutingmodule.forroot",{"_index":418,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxsdkdapp",{"_index":535,"title":{},"body":{"index.html":{}}}],["ngxsdkdappmodule",{"_index":423,"title":{"modules/NgxSdkDappModule.html":{}},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxsmodule",{"_index":397,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxsmodule.forroot([accountstate",{"_index":416,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxsstoragepluginmodule",{"_index":393,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":417,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["noofzerosatend",{"_index":343,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["note",{"_index":552,"title":{},"body":{"index.html":{}}}],["npm",{"_index":569,"title":{},"body":{"index.html":{}}}],["null",{"_index":111,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/PermissionsProviderService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":110,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/FormatAmountType.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(ttl",{"_index":182,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["numericpart",{"_index":330,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["numericpart}.${decimalside",{"_index":348,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["numericpart}.${zeros",{"_index":341,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["object",{"_index":194,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["object.keys(localstorage",{"_index":410,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["object.keys(localstorage).filter((x",{"_index":405,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["object.prototype.tostring.call(x",{"_index":193,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{}}}],["observable",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{}}}],["optional",{"_index":20,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":154,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":431,"title":{},"body":{"modules/NgxSdkDappModule.html":{},"index.html":{},"overview.html":{}}}],["override",{"_index":240,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["overview",{"_index":582,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":507,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":585,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"miscellaneous/functions.html":{}}}],["parseamount",{"_index":433,"title":{},"body":{"pipes/ParseAmountPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseamount(amount",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseamount(value",{"_index":434,"title":{},"body":{"pipes/ParseAmountPipe.html":{}}}],["parseamountpipe",{"_index":403,"title":{"pipes/ParseAmountPipe.html":{}},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"coverage.html":{},"overview.html":{}}}],["parsedaddress",{"_index":198,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["parsedbody",{"_index":200,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["parsedextrainfo",{"_index":178,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["parsedinittoken",{"_index":202,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["parsedinittoken.extrainfo?.timestamp",{"_index":207,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["parsedorigin",{"_index":180,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"miscellaneous/variables.html":{}}}],["partial",{"_index":357,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["parts",{"_index":165,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["parts.length",{"_index":167,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["patchaccount",{"_index":68,"title":{"classes/PatchAccount.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["patchaccount(undefined",{"_index":89,"title":{},"body":{"injectables/AccountState.html":{}}}],["patchstate",{"_index":119,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["patchstate(payload",{"_index":121,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["payload",{"_index":120,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["payload.address",{"_index":122,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["peer",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["permissionsproviderservice",{"_index":437,"title":{"injectables/PermissionsProviderService.html":{}},"body":{"injectables/PermissionsProviderService.html":{},"coverage.html":{}}}],["pipe",{"_index":263,"title":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}},"body":{"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"pipes/ParseAmountPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pipe(0",{"_index":319,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["pipe(modinput",{"_index":304,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["pipe(previous",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipes",{"_index":265,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{},"overview.html":{}}}],["pipes/formatamount/format",{"_index":399,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["pipes/parseamount/parse",{"_index":404,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["pipetransform",{"_index":275,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}}}],["plugin",{"_index":396,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["portal.service",{"_index":455,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["portal.service.ts",{"_index":477,"title":{},"body":{"injectables/XPortalProviderService.html":{},"coverage.html":{}}}],["portal.service.ts:13",{"_index":480,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["portal.service.ts:17",{"_index":481,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["portal.service.ts:6",{"_index":478,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["portal.service.ts:9",{"_index":479,"title":{},"body":{"injectables/XPortalProviderService.html":{}}}],["positivenumbersonly",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":236,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["project",{"_index":548,"title":{},"body":{"index.html":{}}}],["promise",{"_index":222,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"properties.html":{}}}],["provide",{"_index":420,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["providedin",{"_index":30,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["provider",{"_index":440,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["provider/out",{"_index":230,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["providers",{"_index":419,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["providerstype",{"_index":102,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"miscellaneous/enumerations.html":{}}}],["providerstype.empty",{"_index":115,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/PermissionsProviderService.html":{},"miscellaneous/variables.html":{}}}],["providerstype.extension",{"_index":256,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{}}}],["providertype",{"_index":449,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["public",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{}}}],["publish",{"_index":570,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":563,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":355,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["reference",{"_index":584,"title":{},"body":{"index.html":{}}}],["refetch",{"_index":364,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["refetchaccountdata",{"_index":45,"title":{"classes/RefetchAccountData.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["refetchaccountdata(undefined",{"_index":92,"title":{},"body":{"injectables/AccountState.html":{}}}],["refreshremotedata",{"_index":464,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["reinitialize",{"_index":215,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["reinitialize(account",{"_index":224,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["remove",{"_index":301,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["removeitem",{"_index":373,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["removeitem(key",{"_index":384,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["reset",{"_index":363,"title":{},"body":{"classes/LoginAccount.html":{},"modules/NgxSdkDappModule.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"overview.html":{}}}],["resetaccount",{"_index":69,"title":{"classes/ResetAccount.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["resetaccount(undefined",{"_index":95,"title":{},"body":{"injectables/AccountState.html":{}}}],["resettoinitialstate",{"_index":46,"title":{},"body":{"injectables/AccountService.html":{}}}],["result",{"_index":204,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["result.extrainfo",{"_index":208,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":37,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"injectables/PermissionsProviderService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["root",{"_index":31,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/ExtensionProviderService.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["rounding_mode",{"_index":294,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["route",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":216,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"miscellaneous/variables.html":{}}}],["router.navigate",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":544,"title":{},"body":{"index.html":{}}}],["running",{"_index":571,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["scaffolding",{"_index":543,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":367,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{},"index.html":{}}}],["select",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{}}}],["select(actionsexecuting([loginaccount",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{}}}],["select(undefined",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{}}}],["services/authproviders/genericprovider",{"_index":103,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["set",{"_index":360,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["setitem",{"_index":374,"title":{},"body":{"classes/MyStorageEngine.html":{}}}],["setitem(key",{"_index":386,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["setprovider",{"_index":439,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["setprovider(providertype",{"_index":447,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["setstate",{"_index":129,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["setstate(accountinitialstate",{"_index":130,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["shard",{"_index":109,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"miscellaneous/variables.html":{}}}],["showislessthandecimalslabel",{"_index":284,"title":{},"body":{"interfaces/FormatAmountType.html":{},"miscellaneous/functions.html":{}}}],["showlastnonzerodecimal",{"_index":285,"title":{},"body":{"interfaces/FormatAmountType.html":{},"miscellaneous/functions.html":{}}}],["showndecimalsarezero",{"_index":326,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["signature",{"_index":190,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{}}}],["src/.../account.slice.ts",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base64utils.ts",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../canactivate.ts",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decodelogintoken.ts",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decodenativeauthtoken.ts",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../formatamount.ts",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../genericprovider.ts",{"_index":515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../parseamount.ts",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pipe.ts",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stringisinteger.ts",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/constants.ts",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/helpers/base64utils.ts",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/helpers/canactivate.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/helpers/decodelogintoken.ts",{"_index":151,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/helpers/decodenativeauthtoken.ts",{"_index":187,"title":{},"body":{"interfaces/DecodedNativeAuthTokenType.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/helpers/formatamount.ts",{"_index":280,"title":{},"body":{"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/helpers/parseamount.ts",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/helpers/pipe.ts",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/helpers/stringisinteger.ts",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/ngx",{"_index":366,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"coverage.html":{}}}],["src/lib/ngxs/account/account",{"_index":6,"title":{},"body":{"injectables/AccountApiService.html":{},"coverage.html":{}}}],["src/lib/ngxs/account/account.actions.ts",{"_index":353,"title":{},"body":{"classes/LoginAccount.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"coverage.html":{}}}],["src/lib/ngxs/account/account.actions.ts:10",{"_index":359,"title":{},"body":{"classes/LoginAccount.html":{}}}],["src/lib/ngxs/account/account.actions.ts:14",{"_index":475,"title":{},"body":{"classes/ResetAccount.html":{}}}],["src/lib/ngxs/account/account.actions.ts:18",{"_index":474,"title":{},"body":{"classes/RefetchAccountData.html":{}}}],["src/lib/ngxs/account/account.actions.ts:4",{"_index":435,"title":{},"body":{"classes/PatchAccount.html":{}}}],["src/lib/ngxs/account/account.actions.ts:5",{"_index":436,"title":{},"body":{"classes/PatchAccount.html":{}}}],["src/lib/ngxs/account/account.actions.ts:9",{"_index":358,"title":{},"body":{"classes/LoginAccount.html":{}}}],["src/lib/ngxs/account/account.slice.ts",{"_index":80,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/ngxs/account/account.slice.ts:35",{"_index":84,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/ngxs/account/account.slice.ts:36",{"_index":98,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/ngxs/account/account.slice.ts:39",{"_index":91,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/ngxs/account/account.slice.ts:47",{"_index":88,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/ngxs/account/account.slice.ts:60",{"_index":94,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/ngxs/account/account.slice.ts:74",{"_index":97,"title":{},"body":{"injectables/AccountState.html":{}}}],["src/lib/pipes/formatamount/format",{"_index":266,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"coverage.html":{}}}],["src/lib/pipes/parseamount/parse",{"_index":432,"title":{},"body":{"pipes/ParseAmountPipe.html":{},"coverage.html":{}}}],["src/lib/services/account/account.service.ts",{"_index":40,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/lib/services/account/account.service.ts:23",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/lib/services/account/account.service.ts:25",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/lib/services/account/account.service.ts:27",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/lib/services/account/account.service.ts:34",{"_index":50,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/lib/services/account/account.service.ts:38",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/lib/services/authentication/authentication.service.ts",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/lib/services/authentication/authentication.service.ts:11",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/services/authentication/authentication.service.ts:8",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/services/authproviders/extension/extensionprovider.service.ts",{"_index":211,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"coverage.html":{}}}],["src/lib/services/authproviders/extension/extensionprovider.service.ts:16",{"_index":217,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["src/lib/services/authproviders/extension/extensionprovider.service.ts:27",{"_index":219,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["src/lib/services/authproviders/extension/extensionprovider.service.ts:57",{"_index":223,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["src/lib/services/authproviders/extension/extensionprovider.service.ts:64",{"_index":225,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["src/lib/services/authproviders/genericprovider.ts",{"_index":516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts",{"_index":438,"title":{},"body":{"injectables/PermissionsProviderService.html":{},"coverage.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts:13",{"_index":443,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts:35",{"_index":448,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts:46",{"_index":451,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts:59",{"_index":444,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["src/lib/services/authproviders/permissionsprovider.ts:66",{"_index":446,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["src/lib/services/authproviders/xportal/x",{"_index":476,"title":{},"body":{"injectables/XPortalProviderService.html":{},"coverage.html":{}}}],["start",{"_index":302,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["started",{"_index":534,"title":{"index.html":{}},"body":{}}],["state",{"_index":100,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"miscellaneous/variables.html":{}}}],["state.address",{"_index":127,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["statecontext",{"_index":86,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["statements",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":354,"title":{},"body":{"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{}}}],["storage_engine",{"_index":394,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["storage_prefix",{"_index":370,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["storageengine",{"_index":369,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["store",{"_index":48,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ExtensionProviderService.html":{}}}],["stored",{"_index":560,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(integer",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringinteger",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringinteger.match",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringisinteger",{"_index":292,"title":{},"body":{"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stringisinteger(input",{"_index":296,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["super(store",{"_index":238,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["super.connect",{"_index":242,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["super.logout",{"_index":260,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["support",{"_index":587,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":588,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":466,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["table",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":574,"title":{},"body":{"index.html":{}}}],["tests",{"_index":573,"title":{},"body":{"index.html":{}}}],["then((current",{"_index":308,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["then(0",{"_index":323,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["this._provider",{"_index":458,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this._provider.connect(navafterconnectroute",{"_index":471,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this._provider.logout",{"_index":473,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.account",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.account$?.subscribe((account",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountapi.getaccount(payload.address",{"_index":125,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["this.accountapi.getaccount(state.address",{"_index":128,"title":{},"body":{"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{}}}],["this.accountservice.account.accesstoken",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.accountservice.account.logintimestamp",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.extensionprovider",{"_index":469,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.http.get(`https://api.multiversx.com/accounts/${address",{"_index":36,"title":{},"body":{"injectables/AccountApiService.html":{}}}],["this.localaccountservice",{"_index":459,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.localaccountservice.refetchaccountdata",{"_index":465,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.localstore",{"_index":239,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["this.localstore.dispatch",{"_index":255,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["this.provider",{"_index":468,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.refreshremotedata",{"_index":463,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.router.navigate",{"_index":259,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["this.router.navigate([navafterconnectroute",{"_index":257,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["this.setprovider(accountservice.account.currentprovider",{"_index":462,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["this.store.dispatch(new",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{}}}],["throw",{"_index":247,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"interfaces/FormatAmountType.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["timestamp",{"_index":161,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{}}}],["token",{"_index":252,"title":{},"body":{"injectables/ExtensionProviderService.html":{}}}],["tokenpayment",{"_index":286,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["tokenpayment.fungiblefrombiginteger",{"_index":306,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["torationalnumber",{"_index":307,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["transform",{"_index":270,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}}}],["transform(value",{"_index":271,"title":{},"body":{"pipes/FormatAmountPipe.html":{},"pipes/ParseAmountPipe.html":{}}}],["true",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":174,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":171,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":155,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":19,"title":{},"body":{"injectables/AccountApiService.html":{},"injectables/AccountService.html":{},"injectables/AccountState.html":{},"interfaces/AccountStateModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"injectables/ExtensionProviderService.html":{},"pipes/FormatAmountPipe.html":{},"interfaces/FormatAmountType.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"injectables/PermissionsProviderService.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AccountState.html":{}}}],["unit",{"_index":572,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":278,"title":{},"body":{"pipes/FormatAmountPipe.html":{}}}],["use",{"_index":550,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":421,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["using",{"_index":175,"title":{},"body":{"interfaces/DecodedLoginTokenType.html":{},"interfaces/DecodedNativeAuthTokenType.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":387,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{},"pipes/FormatAmountPipe.html":{},"classes/LoginAccount.html":{},"classes/MyStorageEngine.html":{},"pipes/ParseAmountPipe.html":{},"classes/PatchAccount.html":{},"classes/RefetchAccountData.html":{},"classes/ResetAccount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valueof",{"_index":325,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["valuetype",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":594,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":540,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":576,"title":{},"body":{"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ExtensionProviderService.html":{},"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["x",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x.startswith(mystorageengine.storage_prefix",{"_index":406,"title":{},"body":{"classes/MyStorageEngine.html":{},"modules/NgxSdkDappModule.html":{}}}],["xportal/x",{"_index":454,"title":{},"body":{"injectables/PermissionsProviderService.html":{}}}],["xportalproviderservice",{"_index":453,"title":{"injectables/XPortalProviderService.html":{}},"body":{"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{},"coverage.html":{}}}],["yes",{"_index":221,"title":{},"body":{"injectables/ExtensionProviderService.html":{},"pipes/ParseAmountPipe.html":{},"injectables/PermissionsProviderService.html":{},"injectables/XPortalProviderService.html":{}}}],["zero",{"_index":290,"title":{},"body":{"interfaces/FormatAmountType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zeropadding",{"_index":345,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["zeroplaceholders",{"_index":333,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["zeros",{"_index":336,"title":{},"body":{"interfaces/FormatAmountType.html":{}}}],["zoom",{"_index":430,"title":{},"body":{"modules/NgxSdkDappModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccountApiService.html":{"url":"injectables/AccountApiService.html","title":"injectable - AccountApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngxs/account/account-api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccount\n                        \n                    \n                \n            \n            \n                \ngetAccount(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngxs/account/account-api.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountApiService {\n  constructor(private http: HttpClient) {}\n\n  getAccount(address: string) {\n    return this.http.get(`https://api.multiversx.com/accounts/${address}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/account/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                            \n                                account$\n                            \n                            \n                                accountDataLoading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                refetchAccountData\n                            \n                            \n                                    Public\n                                resetToInitialState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/account/account.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        refetchAccountData\n                        \n                    \n                \n            \n            \n                \n                    \n                    refetchAccountData()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/account/account.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetToInitialState\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetToInitialState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/account/account.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStateModel\n\n                    \n                \n                \n                    \n                        Default value : AccountInitialState\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/account/account.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/services/account/account.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountDataLoading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/services/account/account.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport {\n  AccountInitialState,\n  AccountStateModel,\n} from '../../ngxs/account/account.slice';\nimport {\n  LoginAccount,\n  PatchAccount,\n  RefetchAccountData,\n  ResetAccount,\n} from '../../ngxs/account/account.actions';\nimport {\n  ActionsExecuting,\n  actionsExecuting,\n} from '@ngxs-labs/actions-executing';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  @Select() account$: Observable | undefined;\n  @Select(actionsExecuting([LoginAccount, RefetchAccountData]))\n  accountDataLoading$: Observable | undefined;\n\n  public account: AccountStateModel = AccountInitialState;\n\n  constructor(private store: Store) {\n    this.account$?.subscribe((account) => {\n      this.account = account;\n    });\n  }\n  public refetchAccountData() {\n    this.store.dispatch(new RefetchAccountData());\n  }\n\n  public resetToInitialState() {\n    this.store.dispatch(new ResetAccount());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountState.html":{"url":"injectables/AccountState.html","title":"injectable - AccountState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.slice.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginAccount\n                            \n                            \n                                    Async\n                                patchAccount\n                            \n                            \n                                    Async\n                                refetchAccountData\n                            \n                            \n                                    Async\n                                resetAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountApi: AccountApiService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngxs/account/account.slice.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountApi\n                                                  \n                                                        \n                                                                        AccountApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAccount(undefined: StateContext, undefined: LoginAccount)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoginAccount)\n                \n            \n\n            \n                \n                    Defined in src/lib/ngxs/account/account.slice.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                LoginAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchAccount(undefined: StateContext, undefined: PatchAccount)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(PatchAccount)\n                \n            \n\n            \n                \n                    Defined in src/lib/ngxs/account/account.slice.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                PatchAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refetchAccountData\n                        \n                    \n                \n            \n            \n                \n                    \n                    refetchAccountData(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RefetchAccountData)\n                \n            \n\n            \n                \n                    Defined in src/lib/ngxs/account/account.slice.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAccount(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ResetAccount)\n                \n            \n\n            \n                \n                    Defined in src/lib/ngxs/account/account.slice.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accountApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountApiService\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.slice.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { lastValueFrom } from 'rxjs';\nimport { ProvidersType } from '../../services/authProviders/genericProvider';\nimport { AccountApiService } from './account-api.service';\nimport {\n  LoginAccount,\n  PatchAccount,\n  RefetchAccountData,\n  ResetAccount,\n} from './account.actions';\n\nexport interface AccountStateModel {\n  address: string;\n  accessToken: string;\n  currentProvider: ProvidersType | '';\n  shard: number | null;\n  balance: string;\n  loginTimestamp: number;\n}\nexport const AccountInitialState = {\n  address: '',\n  accessToken: '',\n  currentProvider: ProvidersType.EMPTY,\n  shard: null,\n  balance: '',\n  loginTimestamp: 0,\n};\n\n@State({\n  name: 'account',\n  defaults: AccountInitialState,\n})\n@Injectable()\nexport class AccountState {\n  constructor(public accountApi: AccountApiService) {}\n\n  @Action(PatchAccount)\n  async patchAccount(\n    { patchState }: StateContext,\n    { payload }: PatchAccount\n  ) {\n    patchState(payload);\n  }\n\n  @Action(LoginAccount)\n  async loginAccount(\n    { patchState }: StateContext,\n    { payload }: LoginAccount\n  ) {\n    if (!payload.address) return;\n    patchState({ loginTimestamp: Date.now() });\n    const { shard, balance } = await lastValueFrom(\n      this.accountApi.getAccount(payload.address)\n    );\n    patchState({ ...payload, shard, balance });\n  }\n\n  @Action(RefetchAccountData)\n  async refetchAccountData({\n    patchState,\n    getState,\n  }: StateContext) {\n    const state = getState();\n    if (state.address) {\n      const { shard, balance } = await lastValueFrom(\n        this.accountApi.getAccount(state.address)\n      );\n      patchState({ shard, balance });\n    }\n  }\n\n  @Action(ResetAccount)\n  async resetAccount({ setState }: StateContext) {\n    setState(AccountInitialState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountStateModel.html":{"url":"interfaces/AccountStateModel.html","title":"interface - AccountStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.slice.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            currentProvider\n                                        \n                                \n                                \n                                        \n                                            loginTimestamp\n                                        \n                                \n                                \n                                        \n                                            shard\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentProvider:         ProvidersType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProvidersType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginTimestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shard:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { lastValueFrom } from 'rxjs';\nimport { ProvidersType } from '../../services/authProviders/genericProvider';\nimport { AccountApiService } from './account-api.service';\nimport {\n  LoginAccount,\n  PatchAccount,\n  RefetchAccountData,\n  ResetAccount,\n} from './account.actions';\n\nexport interface AccountStateModel {\n  address: string;\n  accessToken: string;\n  currentProvider: ProvidersType | '';\n  shard: number | null;\n  balance: string;\n  loginTimestamp: number;\n}\nexport const AccountInitialState = {\n  address: '',\n  accessToken: '',\n  currentProvider: ProvidersType.EMPTY,\n  shard: null,\n  balance: '',\n  loginTimestamp: 0,\n};\n\n@State({\n  name: 'account',\n  defaults: AccountInitialState,\n})\n@Injectable()\nexport class AccountState {\n  constructor(public accountApi: AccountApiService) {}\n\n  @Action(PatchAccount)\n  async patchAccount(\n    { patchState }: StateContext,\n    { payload }: PatchAccount\n  ) {\n    patchState(payload);\n  }\n\n  @Action(LoginAccount)\n  async loginAccount(\n    { patchState }: StateContext,\n    { payload }: LoginAccount\n  ) {\n    if (!payload.address) return;\n    patchState({ loginTimestamp: Date.now() });\n    const { shard, balance } = await lastValueFrom(\n      this.accountApi.getAccount(payload.address)\n    );\n    patchState({ ...payload, shard, balance });\n  }\n\n  @Action(RefetchAccountData)\n  async refetchAccountData({\n    patchState,\n    getState,\n  }: StateContext) {\n    const state = getState();\n    if (state.address) {\n      const { shard, balance } = await lastValueFrom(\n        this.accountApi.getAccount(state.address)\n      );\n      patchState({ shard, balance });\n    }\n  }\n\n  @Action(ResetAccount)\n  async resetAccount({ setState }: StateContext) {\n    setState(AccountInitialState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/authentication/authentication.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authentication/authentication.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { decodeNativeAuthToken } from '../../helpers';\nimport { AccountService } from '../account/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  constructor(private accountService: AccountService) {}\n\n  isAuthenticated(): boolean {\n    const decoded = decodeNativeAuthToken(\n      this.accountService.account.accessToken\n    );\n    if (!decoded) return false;\n    const millisecondsTTL = decoded.ttl * 1000;\n    const isTokenValid =\n      this.accountService.account.loginTimestamp +\n        millisecondsTTL -\n        Date.now() >\n      0;\n\n    return isTokenValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedLoginTokenType.html":{"url":"interfaces/DecodedLoginTokenType.html","title":"interface - DecodedLoginTokenType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedLoginTokenType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/helpers/decodeLoginToken.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockHash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extraInfo\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraInfo:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { decodeBase64 } from './base64Utils';\nimport { isString } from 'lodash';\n\nexport interface DecodedLoginTokenType {\n  blockHash: string;\n  extraInfo?: { timestamp: number };\n  origin: string;\n  ttl: number;\n}\n\nexport const decodeLoginToken = (\n  loginToken: string\n): DecodedLoginTokenType | null => {\n  if (!loginToken || !isString(loginToken)) {\n    return null;\n  }\n\n  const parts = loginToken.split('.');\n\n  if (parts.length !== 4) {\n    console.error(\n      'Invalid loginToken. You may be trying to decode a nativeAuthToken. Try using decodeNativeAuthToken method instead'\n    );\n\n    return null;\n  }\n\n  try {\n    const [origin, blockHash, ttl, extraInfo] = parts;\n    const parsedExtraInfo = JSON.parse(decodeBase64(extraInfo));\n    const parsedOrigin = decodeBase64(origin);\n\n    return {\n      ttl: Number(ttl),\n      extraInfo: parsedExtraInfo,\n      origin: parsedOrigin,\n      blockHash,\n    };\n  } catch (e) {\n    console.error(`Error trying to decode ${loginToken}:`, e);\n\n    return null;\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedNativeAuthTokenType.html":{"url":"interfaces/DecodedNativeAuthTokenType.html","title":"interface - DecodedNativeAuthTokenType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedNativeAuthTokenType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/helpers/decodeNativeAuthToken.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DecodedLoginTokenType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            signature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { decodeBase64 } from './base64Utils';\nimport { DecodedLoginTokenType, decodeLoginToken } from './decodeLoginToken';\n\nfunction isString(x: any) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\ninterface DecodedNativeAuthTokenType extends DecodedLoginTokenType {\n  address: string;\n  body: string;\n  signature: string;\n}\n\nexport const decodeNativeAuthToken = (\n  accessToken?: string\n): DecodedNativeAuthTokenType | null => {\n  if (!accessToken || !isString(accessToken)) {\n    return null;\n  }\n\n  const parts = accessToken.split('.');\n\n  if (parts.length !== 3) {\n    console.error(\n      'Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead'\n    );\n\n    return null;\n  }\n\n  try {\n    const [address, body, signature] = parts;\n    const parsedAddress = decodeBase64(address);\n    const parsedBody = decodeBase64(body);\n    const parsedInitToken = decodeLoginToken(parsedBody);\n\n    if (!parsedInitToken) {\n      return {\n        address: parsedAddress,\n        body: parsedBody,\n        signature,\n        blockHash: '',\n        origin: '',\n        ttl: 0,\n      };\n    }\n\n    const result = {\n      ...parsedInitToken,\n      address: parsedAddress,\n      body: parsedBody,\n      signature,\n    };\n\n    // if empty object, delete extraInfo\n    if (!parsedInitToken.extraInfo?.timestamp) {\n      delete result.extraInfo;\n    }\n\n    return result;\n  } catch (err) {\n    return null;\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtensionProviderService.html":{"url":"injectables/ExtensionProviderService.html","title":"injectable - ExtensionProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExtensionProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/authProviders/extension/extensionProvider.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    GenericProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                connect\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                reInitialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, accountService: AccountService, authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/authProviders/extension/extensionProvider.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(navAfterConnectRoute?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/extension/extensionProvider.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navAfterConnectRoute\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/extension/extensionProvider.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        reInitialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    reInitialize(account: AccountStateModel)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/extension/extensionProvider.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                AccountStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider/out';\nimport { NativeAuthClient } from '@multiversx/sdk-native-auth-client';\nimport { Store } from '@ngxs/store';\nimport { LoginAccount } from '../../../ngxs/account/account.actions';\nimport { AccountStateModel } from '../../../ngxs/account/account.slice';\nimport { AccountService } from '../../account/account.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { GenericProvider, ProvidersType } from '../genericProvider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExtensionProviderService extends GenericProvider {\n  private localStore: Store;\n  constructor(\n    store: Store,\n    accountService: AccountService,\n    authenticationService: AuthenticationService,\n    private router: Router\n  ) {\n    super(store, accountService, authenticationService);\n    this.localStore = store;\n  }\n\n  override async connect(navAfterConnectRoute?: string): Promise {\n    const { client, init } = await super.connect();\n\n    const extensionInstance = ExtensionProvider.getInstance();\n\n    const extensionInitialized = await extensionInstance.init();\n    if (!extensionInitialized) {\n      throw new Error('Extension could not be initialized');\n    }\n\n    await extensionInstance.login({ token: init });\n    const { signature, address } = extensionInstance.account;\n    if (signature) {\n      const accessToken = client.getToken(address, init, signature);\n      this.localStore.dispatch(\n        new LoginAccount({\n          address,\n          accessToken,\n          currentProvider: ProvidersType.Extension,\n        })\n      );\n    }\n    if (navAfterConnectRoute) this.router.navigate([navAfterConnectRoute]);\n\n    return { client, init };\n  }\n\n  override async logout(): Promise {\n    const extensionInstance = ExtensionProvider.getInstance();\n    await extensionInstance.logout();\n    this.router.navigate(['/']);\n    return super.logout();\n  }\n\n  override reInitialize(account: AccountStateModel): void {\n    ExtensionProvider.getInstance().init();\n    ExtensionProvider.getInstance().setAddress(account.address);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatAmountPipe.html":{"url":"pipes/FormatAmountPipe.html","title":"pipe - FormatAmountPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FormatAmountPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/formatAmount/format-amount.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        formatAmount\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, formatOptions: FormatAmountType | literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/formatAmount/format-amount.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    formatOptions\n                                    \n                                                FormatAmountType | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatAmount, FormatAmountType } from '../../helpers/formatAmount';\n\n@Pipe({\n  name: 'formatAmount',\n})\nexport class FormatAmountPipe implements PipeTransform {\n  transform(value: string, formatOptions: FormatAmountType | {} = {}): unknown {\n    return formatAmount({ ...formatOptions, input: value });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormatAmountType.html":{"url":"interfaces/FormatAmountType.html","title":"interface - FormatAmountType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormatAmountType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/helpers/formatAmount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            addCommas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            decimals\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            digits\n                                        \n                                \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showIsLessThanDecimalsLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showLastNonZeroDecimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addCommas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addCommas:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        digits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        digits:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showIsLessThanDecimalsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showIsLessThanDecimalsLabel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLastNonZeroDecimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLastNonZeroDecimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TokenPayment } from '@multiversx/sdk-core';\nimport BigNumber from 'bignumber.js';\nimport { DECIMALS, DIGITS, ZERO } from '../constants';\nimport { pipe } from './pipe';\nimport { stringIsInteger } from './stringIsInteger';\n\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\n\nexport interface FormatAmountType {\n  input: string;\n  decimals?: number;\n  digits?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport function formatAmount({\n  input,\n  decimals = DECIMALS,\n  digits = DIGITS,\n  showLastNonZeroDecimal = false,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false,\n}: FormatAmountType) {\n  if (!stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  const isNegative = new BigNumber(input).isNegative();\n  let modInput = input;\n\n  if (isNegative) {\n    // remove - at start of input\n    modInput = input.substring(1);\n  }\n\n  return (\n    pipe(modInput as string)\n      // format\n      .then(() =>\n        TokenPayment.fungibleFromBigInteger(\n          '',\n          modInput as string,\n          decimals\n        ).toRationalNumber()\n      )\n\n      // format\n      .then((current) => {\n        const bnBalance = new BigNumber(current);\n\n        if (bnBalance.isZero()) {\n          return ZERO;\n        }\n        const balance = bnBalance.toString(10);\n        const [integerPart, decimalPart] = balance.split('.');\n        const bNdecimalPart = new BigNumber(decimalPart || 0);\n\n        const decimalPlaces = pipe(0)\n          .if(Boolean(decimalPart && showLastNonZeroDecimal))\n          .then(() => Math.max(decimalPart.length, digits))\n\n          .if(bNdecimalPart.isZero() && !showLastNonZeroDecimal)\n          .then(0)\n\n          .if(Boolean(decimalPart && !showLastNonZeroDecimal))\n          .then(() => Math.min(decimalPart.length, digits))\n\n          .valueOf();\n\n        const shownDecimalsAreZero =\n          decimalPart &&\n          digits >= 1 &&\n          digits  {\n            const integerPartZero = new BigNumber(integerPart).isZero();\n            const [numericPart, decimalSide] = current.split('.');\n\n            const zeroPlaceholders = new Array(digits - 1).fill(0);\n            const zeros = [...zeroPlaceholders, 0].join('');\n            const minAmount = [...zeroPlaceholders, 1].join(''); // 00..1\n\n            if (!integerPartZero) {\n              return `${numericPart}.${zeros}`;\n            }\n\n            if (showIsLessThanDecimalsLabel) {\n              return ` {\n            const [numericPart] = current.split('.');\n            let decimalSide = decimalPart.substring(0, decimalPlaces);\n\n            if (showLastNonZeroDecimal) {\n              const noOfZerosAtEnd = digits - decimalSide.length;\n\n              if (noOfZerosAtEnd > 0) {\n                const zeroPadding = Array(noOfZerosAtEnd).fill(0).join('');\n                decimalSide = `${decimalSide}${zeroPadding}`;\n                return `${numericPart}.${decimalSide}`;\n              }\n\n              return current;\n            }\n\n            if (!decimalSide) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .valueOf();\n\n        return formattedBalance;\n      })\n      .if(isNegative)\n      .then((current) => `-${current}`)\n\n      .valueOf()\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAccount.html":{"url":"classes/LoginAccount.html","title":"class - LoginAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngxs/account/account.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Account] Set Account partial data'\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountStateModel } from './account.slice';\n\nexport class PatchAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class LoginAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class ResetAccount {\n  static readonly type = '[Account] Reset Account';\n}\n\nexport class RefetchAccountData {\n  static readonly type = '[Account] refetch Account data';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStorageEngine.html":{"url":"classes/MyStorageEngine.html","title":"class - MyStorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-sdk-dapp.module.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STORAGE_PREFIX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        STORAGE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ngx-sdk-dapp_'\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngx-sdk-dapp.module.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-sdk-dapp.module.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-sdk-dapp.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-sdk-dapp.module.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-sdk-dapp.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/ngx-sdk-dapp.module.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsActionsExecutingModule } from '@ngxs-labs/actions-executing';\nimport {\n  NgxsStoragePluginModule,\n  StorageEngine,\n  STORAGE_ENGINE,\n} from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { AccountState } from './ngxs/account/account.slice';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormatAmountPipe } from './pipes/formatAmount/format-amount.pipe';\nimport { CommonModule } from '@angular/common';\nimport { ParseAmountPipe } from './pipes/parseAmount/parse-amount.pipe';\n\nexport class MyStorageEngine implements StorageEngine {\n  static STORAGE_PREFIX = 'ngx-sdk-dapp_';\n  get length(): number {\n    return Object.keys(localStorage).filter((x) =>\n      x.startsWith(MyStorageEngine.STORAGE_PREFIX)\n    ).length;\n  }\n\n  getItem(key: string): any {\n    return localStorage.getItem(MyStorageEngine.STORAGE_PREFIX + key);\n  }\n\n  setItem(key: string, val: any): void {\n    localStorage.setItem(MyStorageEngine.STORAGE_PREFIX + key, val);\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(MyStorageEngine.STORAGE_PREFIX + key);\n  }\n\n  clear(): void {\n    Object.keys(localStorage)\n      .filter((x) => x.startsWith(MyStorageEngine.STORAGE_PREFIX))\n      .forEach((x) => localStorage.removeItem(x));\n  }\n}\n\n@NgModule({\n  declarations: [FormatAmountPipe, ParseAmountPipe],\n  imports: [\n    NgxsModule.forRoot([AccountState]),\n    NgxsStoragePluginModule.forRoot(),\n    NgxsActionsExecutingModule.forRoot(),\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers: [\n    {\n      provide: STORAGE_ENGINE,\n      useClass: MyStorageEngine,\n    },\n  ],\n  exports: [FormatAmountPipe, ParseAmountPipe],\n})\nexport class NgxSdkDappModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxSdkDappModule.html":{"url":"modules/NgxSdkDappModule.html","title":"module - NgxSdkDappModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxSdkDappModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgxSdkDappModule\n\n\n\ncluster_NgxSdkDappModule_declarations\n\n\n\ncluster_NgxSdkDappModule_exports\n\n\n\n\nFormatAmountPipe\n\nFormatAmountPipe\n\n\n\nNgxSdkDappModule\n\nNgxSdkDappModule\n\nNgxSdkDappModule -->\n\nFormatAmountPipe->NgxSdkDappModule\n\n\n\n\n\nParseAmountPipe\n\nParseAmountPipe\n\nNgxSdkDappModule -->\n\nParseAmountPipe->NgxSdkDappModule\n\n\n\n\n\nFormatAmountPipe \n\nFormatAmountPipe \n\nFormatAmountPipe  -->\n\nNgxSdkDappModule->FormatAmountPipe \n\n\n\n\n\nParseAmountPipe \n\nParseAmountPipe \n\nParseAmountPipe  -->\n\nNgxSdkDappModule->ParseAmountPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-sdk-dapp.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormatAmountPipe\n                        \n                        \n                            ParseAmountPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormatAmountPipe\n                        \n                        \n                            ParseAmountPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsActionsExecutingModule } from '@ngxs-labs/actions-executing';\nimport {\n  NgxsStoragePluginModule,\n  StorageEngine,\n  STORAGE_ENGINE,\n} from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { AccountState } from './ngxs/account/account.slice';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormatAmountPipe } from './pipes/formatAmount/format-amount.pipe';\nimport { CommonModule } from '@angular/common';\nimport { ParseAmountPipe } from './pipes/parseAmount/parse-amount.pipe';\n\nexport class MyStorageEngine implements StorageEngine {\n  static STORAGE_PREFIX = 'ngx-sdk-dapp_';\n  get length(): number {\n    return Object.keys(localStorage).filter((x) =>\n      x.startsWith(MyStorageEngine.STORAGE_PREFIX)\n    ).length;\n  }\n\n  getItem(key: string): any {\n    return localStorage.getItem(MyStorageEngine.STORAGE_PREFIX + key);\n  }\n\n  setItem(key: string, val: any): void {\n    localStorage.setItem(MyStorageEngine.STORAGE_PREFIX + key, val);\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(MyStorageEngine.STORAGE_PREFIX + key);\n  }\n\n  clear(): void {\n    Object.keys(localStorage)\n      .filter((x) => x.startsWith(MyStorageEngine.STORAGE_PREFIX))\n      .forEach((x) => localStorage.removeItem(x));\n  }\n}\n\n@NgModule({\n  declarations: [FormatAmountPipe, ParseAmountPipe],\n  imports: [\n    NgxsModule.forRoot([AccountState]),\n    NgxsStoragePluginModule.forRoot(),\n    NgxsActionsExecutingModule.forRoot(),\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers: [\n    {\n      provide: STORAGE_ENGINE,\n      useClass: MyStorageEngine,\n    },\n  ],\n  exports: [FormatAmountPipe, ParseAmountPipe],\n})\nexport class NgxSdkDappModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ParseAmountPipe.html":{"url":"pipes/ParseAmountPipe.html","title":"pipe - ParseAmountPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ParseAmountPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/parseAmount/parse-amount.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        parseAmount\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, decimals?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/parseAmount/parse-amount.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decimals\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { parseAmount } from '../../helpers';\n\n@Pipe({\n  name: 'parseAmount',\n})\nexport class ParseAmountPipe implements PipeTransform {\n  transform(value: string, decimals?: number): string {\n    return parseAmount(value, decimals);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchAccount.html":{"url":"classes/PatchAccount.html","title":"class - PatchAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngxs/account/account.actions.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Account] Set Account partial data'\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountStateModel } from './account.slice';\n\nexport class PatchAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class LoginAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class ResetAccount {\n  static readonly type = '[Account] Reset Account';\n}\n\nexport class RefetchAccountData {\n  static readonly type = '[Account] refetch Account data';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsProviderService.html":{"url":"injectables/PermissionsProviderService.html","title":"injectable - PermissionsProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/authProviders/PermissionsProvider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                setProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    provider\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(extensionProvider: ExtensionProviderService, accountService: AccountService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/authProviders/PermissionsProvider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        extensionProvider\n                                                  \n                                                        \n                                                                        ExtensionProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(navAfterConnectRoute?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/PermissionsProvider.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navAfterConnectRoute\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navAfterConnectRoute?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/PermissionsProvider.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navAfterConnectRoute\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProvider\n                        \n                    \n                \n            \n            \n                \nsetProvider(providerType: ProvidersType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/PermissionsProvider.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providerType\n                                    \n                                                ProvidersType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        provider\n                    \n                \n\n                \n                    \n                        getprovider()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/services/authProviders/PermissionsProvider.ts:46\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccountService } from '../account/account.service';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { ExtensionProviderService } from './extension/extensionProvider.service';\nimport { GenericProvider, ProvidersType } from './genericProvider';\nimport { XPortalProviderService } from './xPortal/x-portal.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsProviderService {\n  private _provider: ExtensionProviderService | XPortalProviderService | null;\n  private localAccountService: AccountService;\n\n  constructor(\n    private extensionProvider: ExtensionProviderService,\n    accountService: AccountService,\n    authService: AuthenticationService\n  ) {\n    this._provider = null;\n    this.localAccountService = accountService;\n    if (\n      accountService.account.currentProvider !== ProvidersType.EMPTY &&\n      authService.isAuthenticated()\n    ) {\n      this.setProvider(accountService.account.currentProvider as ProvidersType);\n      this.refreshRemoteData();\n    }\n  }\n\n  private refreshRemoteData() {\n    this.localAccountService.refetchAccountData();\n  }\n\n  setProvider(providerType: ProvidersType) {\n    switch (providerType) {\n      case ProvidersType.Extension:\n        this.provider = this.extensionProvider;\n        break;\n      default:\n        this.provider = null;\n        break;\n    }\n  }\n\n  public get provider():\n    | ExtensionProviderService\n    | XPortalProviderService\n    | null {\n    return this._provider;\n  }\n\n  private set provider(\n    provider: ExtensionProviderService | XPortalProviderService | null\n  ) {\n    this._provider = provider;\n  }\n\n  public connect(navAfterConnectRoute?: string): Promise {\n    if (this._provider) {\n      return this._provider.connect(navAfterConnectRoute);\n    }\n    throw new Error('Provider is not set');\n  }\n\n  public logout(navAfterConnectRoute?: string): Promise {\n    if (this._provider) {\n      return this._provider.logout();\n    }\n    throw new Error('Provider is not set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefetchAccountData.html":{"url":"classes/RefetchAccountData.html","title":"class - RefetchAccountData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefetchAccountData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Account] refetch Account data'\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountStateModel } from './account.slice';\n\nexport class PatchAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class LoginAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class ResetAccount {\n  static readonly type = '[Account] Reset Account';\n}\n\nexport class RefetchAccountData {\n  static readonly type = '[Account] refetch Account data';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetAccount.html":{"url":"classes/ResetAccount.html","title":"class - ResetAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngxs/account/account.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Account] Reset Account'\n                    \n                \n                    \n                        \n                                Defined in src/lib/ngxs/account/account.actions.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountStateModel } from './account.slice';\n\nexport class PatchAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class LoginAccount {\n  static readonly type = '[Account] Set Account partial data';\n  constructor(public payload: Partial) {}\n}\n\nexport class ResetAccount {\n  static readonly type = '[Account] Reset Account';\n}\n\nexport class RefetchAccountData {\n  static readonly type = '[Account] refetch Account data';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XPortalProviderService.html":{"url":"injectables/XPortalProviderService.html","title":"injectable - XPortalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XPortalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/authProviders/xPortal/x-portal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                logout\n                            \n                            \n                                reinitialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/authProviders/xPortal/x-portal.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(navAfterConnectRoute?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/xPortal/x-portal.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navAfterConnectRoute\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/xPortal/x-portal.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reinitialize\n                        \n                    \n                \n            \n            \n                \nreinitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/authProviders/xPortal/x-portal.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class XPortalProviderService {\n  constructor() {}\n\n  connect(navAfterConnectRoute?: string): Promise {\n    throw new Error('Method not implemented.');\n  }\n\n  logout(): Promise {\n    throw new Error('Method not implemented.');\n  }\n\n  reinitialize(): void {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/constants.ts\n            \n            variable\n            DECIMALS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/constants.ts\n            \n            variable\n            DIGITS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/constants.ts\n            \n            variable\n            ZERO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/base64Utils.ts\n            \n            function\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/base64Utils.ts\n            \n            function\n            encodeToBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/base64Utils.ts\n            \n            function\n            isStringBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/canActivate.ts\n            \n            variable\n            canActivateRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/decodeLoginToken.ts\n            \n            interface\n            DecodedLoginTokenType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/helpers/decodeLoginToken.ts\n            \n            variable\n            decodeLoginToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/decodeNativeAuthToken.ts\n            \n            interface\n            DecodedNativeAuthTokenType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/helpers/decodeNativeAuthToken.ts\n            \n            function\n            isString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/decodeNativeAuthToken.ts\n            \n            variable\n            decodeNativeAuthToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/formatAmount.ts\n            \n            interface\n            FormatAmountType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/helpers/formatAmount.ts\n            \n            function\n            formatAmount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/parseAmount.ts\n            \n            function\n            parseAmount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/pipe.ts\n            \n            function\n            pipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/helpers/stringIsInteger.ts\n            \n            variable\n            stringIsInteger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/ngx-sdk-dapp.module.ts\n            \n            class\n            MyStorageEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account-api.service.ts\n            \n            injectable\n            AccountApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.actions.ts\n            \n            class\n            LoginAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.actions.ts\n            \n            class\n            PatchAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.actions.ts\n            \n            class\n            RefetchAccountData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.actions.ts\n            \n            class\n            ResetAccount\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.slice.ts\n            \n            injectable\n            AccountState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.slice.ts\n            \n            interface\n            AccountStateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/ngxs/account/account.slice.ts\n            \n            variable\n            AccountInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/formatAmount/format-amount.pipe.ts\n            \n            pipe\n            FormatAmountPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/parseAmount/parse-amount.pipe.ts\n            \n            pipe\n            ParseAmountPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/account/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/services/authProviders/PermissionsProvider.ts\n            \n            injectable\n            PermissionsProviderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/authProviders/extension/extensionProvider.service.ts\n            \n            injectable\n            ExtensionProviderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/authProviders/xPortal/x-portal.service.ts\n            \n            injectable\n            XPortalProviderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @ngxs/store : ^3.7.6\n        \n            @angular/common : 15.2.1\n        \n            @angular/core : 15.2.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProvidersType   (src/.../genericProvider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/authProviders/genericProvider.ts\n    \n        \n            \n                \n                    \n                        \n                        ProvidersType\n                    \n                \n                        \n                            \n                                 Extension\n                            \n                        \n                        \n                            \n                                Value : Extension\n                            \n                        \n                        \n                            \n                                 EMPTY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            decodeBase64   (src/.../base64Utils.ts)\n                        \n                        \n                            encodeToBase64   (src/.../base64Utils.ts)\n                        \n                        \n                            formatAmount   (src/.../formatAmount.ts)\n                        \n                        \n                            isString   (src/.../decodeNativeAuthToken.ts)\n                        \n                        \n                            isStringBase64   (src/.../base64Utils.ts)\n                        \n                        \n                            parseAmount   (src/.../parseAmount.ts)\n                        \n                        \n                            pipe   (src/.../pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/helpers/base64Utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeBase64\n                        \n                    \n                \n            \n            \n                \ndecodeBase64(string: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeToBase64\n                        \n                    \n                \n            \n            \n                \nencodeToBase64(string: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStringBase64\n                        \n                    \n                \n            \n            \n                \nisStringBase64(string: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/helpers/formatAmount.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatAmount\n                        \n                    \n                \n            \n            \n                \nformatAmount(__namedParameters: {input: FormatAmountType, decimals, digits, showLastNonZeroDecimal, showIsLessThanDecimalsLabel, addCommas})\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                FormatAmountType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    decimals\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DECIMALS\n                                    \n\n                                \n                                \n                                    digits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DIGITS\n                                    \n\n                                \n                                \n                                    showLastNonZeroDecimal\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    showIsLessThanDecimalsLabel\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    addCommas\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/helpers/decodeNativeAuthToken.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isString\n                        \n                    \n                \n            \n            \n                \nisString(x: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/helpers/parseAmount.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseAmount\n                        \n                    \n                \n            \n            \n                \nparseAmount(amount: string, decimals: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    decimals\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DECIMALS\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/helpers/pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n            \n                \npipe(previous: ValueType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previous\n                                    \n                                            ValueType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxSdkDapp\nThis library was generated with Angular CLI version 15.2.0.\nCode scaffolding\nRun ng generate component component-name --project ngx-sdk-dapp to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module --project ngx-sdk-dapp.\n\nNote: Don't forget to add --project ngx-sdk-dapp or else it will be added to the default project in your angular.json file. \n\nBuild\nRun ng build ngx-sdk-dapp to build the project. The build artifacts will be stored in the dist/ directory.\nPublishing\nAfter building your library with ng build ngx-sdk-dapp, go to the dist folder cd dist/ngx-sdk-dapp and run npm publish.\nRunning unit tests\nRun ng test ngx-sdk-dapp to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxSdkDappModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgxSdkDappModule\n\n\n\ncluster_NgxSdkDappModule_declarations\n\n\n\ncluster_NgxSdkDappModule_exports\n\n\n\n\nFormatAmountPipe\n\nFormatAmountPipe\n\n\n\nNgxSdkDappModule\n\nNgxSdkDappModule\n\nNgxSdkDappModule -->\n\nFormatAmountPipe->NgxSdkDappModule\n\n\n\n\n\nParseAmountPipe\n\nParseAmountPipe\n\nNgxSdkDappModule -->\n\nParseAmountPipe->NgxSdkDappModule\n\n\n\n\n\nFormatAmountPipe \n\nFormatAmountPipe \n\nFormatAmountPipe  -->\n\nNgxSdkDappModule->FormatAmountPipe \n\n\n\n\n\nParseAmountPipe \n\nParseAmountPipe \n\nParseAmountPipe  -->\n\nNgxSdkDappModule->ParseAmountPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountInitialState   (src/.../account.slice.ts)\n                        \n                        \n                            canActivateRoute   (src/.../canActivate.ts)\n                        \n                        \n                            DECIMALS   (src/.../constants.ts)\n                        \n                        \n                            decodeLoginToken   (src/.../decodeLoginToken.ts)\n                        \n                        \n                            decodeNativeAuthToken   (src/.../decodeNativeAuthToken.ts)\n                        \n                        \n                            DIGITS   (src/.../constants.ts)\n                        \n                        \n                            stringIsInteger   (src/.../stringIsInteger.ts)\n                        \n                        \n                            ZERO   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ngxs/account/account.slice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccountInitialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  address: '',\n  accessToken: '',\n  currentProvider: ProvidersType.EMPTY,\n  shard: null,\n  balance: '',\n  loginTimestamp: 0,\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/helpers/canActivate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canActivateRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n) => {\n  const isAuthenticated = inject(AuthenticationService).isAuthenticated();\n  if (!isAuthenticated) {\n    const router = inject(Router);\n\n    inject(AccountService).resetToInitialState();\n    router.navigate(['/']);\n  }\n  return isAuthenticated;\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DECIMALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 18\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIGITS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ZERO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0'\n                    \n                \n\n\n        \n    \n\n    src/lib/helpers/decodeLoginToken.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeLoginToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  loginToken: string\n): DecodedLoginTokenType | null => {\n  if (!loginToken || !isString(loginToken)) {\n    return null;\n  }\n\n  const parts = loginToken.split('.');\n\n  if (parts.length !== 4) {\n    console.error(\n      'Invalid loginToken. You may be trying to decode a nativeAuthToken. Try using decodeNativeAuthToken method instead'\n    );\n\n    return null;\n  }\n\n  try {\n    const [origin, blockHash, ttl, extraInfo] = parts;\n    const parsedExtraInfo = JSON.parse(decodeBase64(extraInfo));\n    const parsedOrigin = decodeBase64(origin);\n\n    return {\n      ttl: Number(ttl),\n      extraInfo: parsedExtraInfo,\n      origin: parsedOrigin,\n      blockHash,\n    };\n  } catch (e) {\n    console.error(`Error trying to decode ${loginToken}:`, e);\n\n    return null;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/helpers/decodeNativeAuthToken.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeNativeAuthToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken?: string\n): DecodedNativeAuthTokenType | null => {\n  if (!accessToken || !isString(accessToken)) {\n    return null;\n  }\n\n  const parts = accessToken.split('.');\n\n  if (parts.length !== 3) {\n    console.error(\n      'Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead'\n    );\n\n    return null;\n  }\n\n  try {\n    const [address, body, signature] = parts;\n    const parsedAddress = decodeBase64(address);\n    const parsedBody = decodeBase64(body);\n    const parsedInitToken = decodeLoginToken(parsedBody);\n\n    if (!parsedInitToken) {\n      return {\n        address: parsedAddress,\n        body: parsedBody,\n        signature,\n        blockHash: '',\n        origin: '',\n        ttl: 0,\n      };\n    }\n\n    const result = {\n      ...parsedInitToken,\n      address: parsedAddress,\n      body: parsedBody,\n      signature,\n    };\n\n    // if empty object, delete extraInfo\n    if (!parsedInitToken.extraInfo?.timestamp) {\n      delete result.extraInfo;\n    }\n\n    return result;\n  } catch (err) {\n    return null;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/helpers/stringIsInteger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stringIsInteger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  integer: string,\n  positiveNumbersOnly = true\n) => {\n  const stringInteger = String(integer);\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n  const bNparsed = new BigNumber(stringInteger);\n  const limit = positiveNumbersOnly ? 0 : -1;\n  return (\n    bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit\n  );\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
